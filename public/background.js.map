{"version":3,"file":"background.js","sources":["../src/lib/common/chatTest.ts","../src/lib/common/constant.ts","../src/lib/background/functions.ts","../src/background.ts"],"sourcesContent":["import type {\n  TestMsgEmoticon,\n  TestMsg,\n  TwipUser,\n  UserTypeFilter,\n} from \"@src/global\";\n\nexport const testTwitchUserProfiles: Array<TwipUser> = [\n  {\n    type: \"normal\",\n    userData: {\n      badges: null,\n      \"badges-raw\": null,\n      color: null,\n      \"display-name\": \"testuser1\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: false,\n      \"user-id\": \"testuser1\",\n      \"user-type\": null,\n      username: \"testuser1\",\n    },\n  },\n  {\n    type: \"normal\",\n    userData: {\n      badges: null,\n      \"badges-raw\": null,\n      color: null,\n      \"display-name\": \"testuser2\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: false,\n      \"user-id\": \"testuser2\",\n      \"user-type\": null,\n      username: \"testuser2\",\n    },\n  },\n  {\n    type: \"broadcaster\",\n    userData: {\n      badges: {\n        broadcaster: \"1\",\n      },\n      \"badges-raw\": \"broadcaster/1\",\n      color: null,\n      \"display-name\": \"testbroadcaster\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: false,\n      \"user-id\": \"testbroadcaster\",\n      \"user-type\": null,\n      username: \"testbroadcaster\",\n    },\n  },\n  {\n    type: \"moderator\",\n    userData: {\n      badges: {\n        moderator: \"1\",\n      },\n      \"badges-raw\": \"moderator/1\",\n      color: null,\n      \"display-name\": \"testmoderator\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: false,\n      \"user-id\": \"testmoderator\",\n      \"user-type\": null,\n      username: \"testmoderator\",\n    },\n  },\n  {\n    type: \"partner\",\n    userData: {\n      badges: {\n        partner: \"1\",\n      },\n      \"badges-raw\": \"partner/1\",\n      color: null,\n      \"display-name\": \"testpartner\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: false,\n      \"user-id\": \"testpartner\",\n      \"user-type\": null,\n      username: \"testpartner\",\n    },\n  },\n  {\n    type: \"turbo\",\n    userData: {\n      badges: {\n        turbo: \"1\",\n      },\n      \"badges-raw\": \"turbo/1\",\n      color: null,\n      \"display-name\": \"testturbo\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: true,\n      \"user-id\": \"testturbo\",\n      \"user-type\": null,\n      username: \"testturbo\",\n    },\n  },\n  {\n    type: \"premium\",\n    userData: {\n      badges: {\n        premium: \"1\",\n      },\n      \"badges-raw\": \"premium/1\",\n      color: null,\n      \"display-name\": \"testpremium\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: true,\n      \"user-id\": \"testpremium\",\n      \"user-type\": null,\n      username: \"testpremium\",\n    },\n  },\n  {\n    type: \"bits\",\n    userData: {\n      badges: {\n        bits: \"1\",\n      },\n      \"badges-raw\": \"bits/1\",\n      color: null,\n      \"display-name\": \"testbits\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: true,\n      \"user-id\": \"testbits\",\n      \"user-type\": null,\n      username: \"testbits\",\n    },\n  },\n  {\n    type: \"admin\",\n    userData: {\n      badges: {\n        admin: \"1\",\n      },\n      \"badges-raw\": \"admin/1\",\n      color: null,\n      \"display-name\": \"testadmin\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: true,\n      \"user-id\": \"testadmin\",\n      \"user-type\": null,\n      username: \"testadmin\",\n    },\n  },\n  {\n    type: \"staff\",\n    userData: {\n      badges: {\n        staff: \"1\",\n      },\n      \"badges-raw\": \"staff/1\",\n      color: null,\n      \"display-name\": \"teststaff\",\n      emotes: null,\n      \"emotes-raw\": null,\n      \"first-msg\": false,\n      id: \"testid\",\n      \"message-type\": \"chat\",\n      mod: false,\n      \"returning-chatter\": false,\n      \"room-id\": \"testid\",\n      subscriber: false,\n      turbo: true,\n      \"user-id\": \"teststaff\",\n      \"user-type\": null,\n      username: \"teststaff\",\n    },\n  },\n];\n\nexport const getTestTwitchUserProfile = (filter?: UserTypeFilter) => {\n  const userProfiles = filter\n    ? testTwitchUserProfiles.filter((itm) => filter[itm.type])\n    : testTwitchUserProfiles;\n\n  return userProfiles[Math.floor(Math.random() * userProfiles.length)];\n};\n\nexport const testMsgEmoticons: Array<TestMsgEmoticon> = [\n  { symbol: \"BloodTrail\", code: 69, imgSrc: \"/icon/bloodtrail.png\" },\n  { symbol: \"SmileRobot\", code: 1, imgSrc: \"/icon/smile_robot.png\" },\n  { symbol: \"PurpleHeart\", code: 555555584, imgSrc: \"/icon/purple_heart.png\" },\n  { symbol: \"HeyGuys\", code: 30259, imgSrc: \"/icon/hey_guys.png\" },\n  { symbol: \"BibleThump\", code: 86, imgSrc: \"/icon/bible_thump.png\" },\n  { symbol: \"PogChamp\", code: 305954156, imgSrc: \"/icon/pog_champ.png\" },\n  { symbol: \"PunchTrees\", code: 47, imgSrc: \"/icon/punch_trees.png\" },\n  { symbol: \"VoHiYo\", code: 81274, imgSrc: \"/icon/vohiyo.png\" },\n];\n\nexport const defaultTestMsgProfiles: Array<TestMsg> = [\n  { msg: \"Hello World\", emotes: null },\n  { msg: \"Hi There~~~!\", emotes: null },\n  { msg: \"트하트하트하트하 유하유하유하유하\", emotes: null },\n  {\n    msg: \"It's a sample chat test~ blah blah blah blah blah\",\n    emotes: null,\n  },\n  {\n    msg: \"동해물과 백두산이 마르고 닳도록 하느님이 보우하사 우리나라만세\",\n    emotes: null,\n  },\n  {\n    msg: \"남산 위에 저 소나무 철갑을 두른 듯 바람 서리 불변함은 우리 기상일세\",\n    emotes: null,\n  },\n  { msg: \"간장 공장 공장장은 강 공장장이다.\", emotes: null },\n  {\n    msg: \"트수만 믿고 있으라구 $BloodTrail $BloodTrail $BibleThump $BibleThump\",\n    emotes: {\n      69: [\"12-22\", \"24-34\"],\n      86: [\"36-46\", \"48-58\"],\n    },\n  },\n  { msg: \":귀여운돼끼_1:\", emotes: null },\n  { msg: \":귀여운돼끼_2:\", emotes: null },\n  { msg: \":귀여운돼끼_3:\", emotes: null },\n  {\n    msg: \"채팅테스트 메시지입니다! 블라블라블라블라~~\",\n    emotes: null,\n  },\n];\n\nexport const getTestMsgProfile = (msgs: Array<TestMsg>) =>\n  msgs[Math.floor(Math.random() * msgs.length)];\n","import type { ChatTestType } from \"@src/global\";\n\nexport const CHAT_TEST_TYPES: Array<ChatTestType> = [\n  { id: 1, type: \"트윕 오버레이 테스트\", unavailable: false },\n  { id: 2, type: \"트위치 채팅 테스트\", unavailable: true },\n];\n\nexport const CHAT_TEST_ALERT_TEXT = {\n  NOT_TWIP_CHATBOX_OVERLAY: \"현재 탭이 트윕 챗박스 오버레이가 아닙니다.\",\n  NOT_TWITCH_CHAT_PAGE: \"현재 탭이 트위치 채팅 페이지가 아닙니다.\",\n};\n\nexport const AUTOSAVE_ALERT_TEXT = {\n  NOT_TWIP_CHABOX_SETTINGS_PAGE: \"현재 탭이 트윕 챗박스 설정페이지가 아닙니다.\",\n};\n\nexport const LOCALSTORAGE_KEYS = {\n  chatTestType: \"chatTestType\",\n  chatTestBtnState: \"chatTestBtnState\",\n  chatTestDelay: \"chatTestDelay\",\n  chatTestRandomDelayOffset: \"chatTestRandomDelayOffset\",\n  isChatTestRandomDelayOffset: \"isChatTestRandomDelayOffset\",\n  userTypeFilter: \"userTypeFilter\",\n  testMsg: \"testMsg\",\n  twipChatboxAutosaveStatus: \"twipChatboxAutosaveStatus\",\n};\n","export const chromeAlert = async (tabId: number, msg: string) => {\n  await chrome.scripting.executeScript({\n    target: {\n      tabId,\n    },\n    func: (msg) => {\n      window.alert(msg);\n    },\n    args: [msg],\n    world: \"MAIN\",\n  });\n};\n\nexport const chromeConfirm = async (\n  tabId: number,\n  msg: string,\n  callback: () => void\n) => {\n  await chrome.scripting\n    .executeScript({\n      target: {\n        tabId,\n      },\n      func: (msg) => {\n        return window.confirm(msg);\n      },\n      args: [msg],\n      world: \"MAIN\",\n    })\n    .then((result) => result[0].result)\n    .then((result) => {\n      if (result) callback();\n    });\n};\n\nexport const getAutosaveLocalStorageKey = (twipChatboxId: string) =>\n  `TWIP_CHATBOX_AUTOSAVE_${twipChatboxId}`;\n\nexport const isVaildTwipChatboxSettingsPage = (url: string) =>\n  url.match(/^http(s?)\\:\\/\\/twip\\.kr\\/dashboard\\/chatbox.*$/) ? true : false;\n","import type {\n  ChromeRuntimeSendMessageRequest,\n  TestMsg,\n  TwipOverlay,\n  TwipUser,\n  UserTypeFilter,\n} from \"@src/global\";\nimport { testTwitchUserProfiles } from \"@src/lib/common/chatTest\";\nimport { LOCALSTORAGE_KEYS } from \"@lib/common/constant\";\nimport {\n  chromeAlert,\n  chromeConfirm,\n  getAutosaveLocalStorageKey,\n  isVaildTwipChatboxSettingsPage,\n} from \"@lib/background/functions\";\n\nconst tabStatus: { [key: string]: \"alive\" | \"closed\" } = {};\nconst twipChatboxAutosaveIntervals: {\n  [key: string]: { tabId: string; interval: chrome.alarms.Alarm };\n} = {};\n\nchrome.alarms.onAlarm.addListener(async (alarm) => {\n  const alarmType = alarm.name.split(\"_\")[0];\n  const tabId = parseInt(alarm.name.split(\"_\")[1]);\n\n  switch (alarmType) {\n    case \"twip-autosave\":\n      const twipChatboxId = alarm.name.split(\"_\")[2];\n\n      if (tabStatus[tabId.toString()] === \"closed\") {\n        await chrome.alarms.clear(alarm.name);\n        if (twipChatboxAutosaveIntervals[twipChatboxId])\n          delete twipChatboxAutosaveIntervals[twipChatboxId];\n      } else {\n        const customThemeSource = await chrome.scripting\n          .executeScript({\n            target: {\n              tabId,\n            },\n            func: () => {\n              const $ = (window as any).$;\n              const date = new Date();\n              return {\n                css: $(\".CodeMirror\")[0].CodeMirror.getValue(),\n                title: $(\"#chatbox_name\").val(),\n                timestamp: `${date.toLocaleDateString()}  ${date.toLocaleTimeString()}`,\n              };\n            },\n            world: \"MAIN\",\n          })\n          .then((result) => result[0].result);\n\n        if (\n          customThemeSource &&\n          customThemeSource.css &&\n          customThemeSource.title\n        ) {\n          const autosaveLocalStorageKey =\n            getAutosaveLocalStorageKey(twipChatboxId);\n\n          let tmp: { [key: string]: any } = {};\n          tmp[autosaveLocalStorageKey] = customThemeSource.css;\n          await chrome.storage.local.set(tmp);\n\n          tmp = {};\n          const autosavedOverlayData: TwipOverlay = {\n            localStorageKey: getAutosaveLocalStorageKey(twipChatboxId),\n            chatboxId: twipChatboxId,\n            latestUpdate: customThemeSource.timestamp,\n            title: customThemeSource.title,\n          };\n          await chrome.storage.local\n            .get(\"TWIP_AUTOSAVED_OVERLAYS\")\n            .then(async ({ TWIP_AUTOSAVED_OVERLAYS }) => {\n              if (!TWIP_AUTOSAVED_OVERLAYS) {\n                tmp[twipChatboxId] = autosavedOverlayData;\n                await chrome.storage.local.set({\n                  TWIP_AUTOSAVED_OVERLAYS: tmp,\n                });\n              } else {\n                tmp = TWIP_AUTOSAVED_OVERLAYS;\n                tmp[twipChatboxId] = autosavedOverlayData;\n                await chrome.storage.local.set({\n                  TWIP_AUTOSAVED_OVERLAYS: tmp,\n                });\n              }\n            });\n          console.log(await chrome.storage.local.get(autosaveLocalStorageKey));\n        }\n      }\n      break;\n  }\n});\n\nchrome.runtime.onMessage.addListener(\n  async (request: ChromeRuntimeSendMessageRequest, sender, sendResponse) => {\n    switch (request.type) {\n      case \"twip-chat-control\":\n        if (request.tabId) await twipChatControl(request);\n        break;\n      case \"twip-chat-clear\":\n        await twipChatClear(request);\n        break;\n      case \"twip-chatbox-autosave-enable\":\n        const tmp: { [key: string]: boolean } = {};\n        tmp[LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus] =\n          request.autosaveStatus;\n        await chrome.storage.local.set(tmp);\n\n        if (request.tab) {\n          let currentTabIsRunning = false;\n          for (const twipChatboxId of Object.keys(\n            twipChatboxAutosaveIntervals\n          )) {\n            if (\n              twipChatboxAutosaveIntervals[twipChatboxId] &&\n              twipChatboxAutosaveIntervals[twipChatboxId].tabId ===\n                request.tab.id.toString()\n            )\n              currentTabIsRunning = true;\n          }\n          if (request.autosaveStatus) {\n            if (\n              !currentTabIsRunning &&\n              isVaildTwipChatboxSettingsPage(request.tab.url)\n            ) {\n              await chromeConfirm(\n                request.tab.id,\n                \"현재 탭에 Twip Chatbox 자동저장을 실행하시겠습니까?\",\n                async () => {\n                  await runTwipChatboxAutosave(\n                    request.tab.id,\n                    request.tab,\n                    true\n                  );\n                }\n              );\n            }\n            await chromeAlert(\n              request.tab.id,\n              \"(주의) 다른 탭의 Twip Chatbox 설정페이지들은 새로고침 후 자동저장이 실행됩니다.\"\n            );\n          }\n        }\n        break;\n      case \"twip-chatbox-get-autosave\":\n        let tmpTwipChatboxId: string = null;\n        for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n          if (\n            twipChatboxAutosaveIntervals[twipChatboxId] &&\n            twipChatboxAutosaveIntervals[twipChatboxId].tabId ===\n              request.tabId.toString()\n          ) {\n            return sendResponse({ autosaveStatus: true, twipChatboxId });\n          } else if (\n            twipChatboxAutosaveIntervals[twipChatboxId].tabId ===\n            request.tabId.toString()\n          ) {\n            tmpTwipChatboxId = twipChatboxId;\n          }\n        }\n        return sendResponse({\n          autosaveStatus: false,\n          twipChatboxId: tmpTwipChatboxId,\n        });\n      case \"twip-chatbox-set-autosave\":\n        await runTwipChatboxAutosave(\n          request.tab.id,\n          request.tab,\n          request.autosaveStatus\n        );\n        break;\n      case \"twip-chatbox-apply\":\n        if (isVaildTwipChatboxSettingsPage(request.tab.url)) {\n          const customCSS: string = await chrome.storage.local\n            .get(request.overlay.localStorageKey)\n            .then((res) => res[request.overlay.localStorageKey]);\n          await chrome.scripting.executeScript({\n            target: {\n              tabId: request.tab.id,\n            },\n            func: (css, title) => {\n              const $ = (window as any).$;\n              $(\".CodeMirror\")[0].CodeMirror.setValue(css);\n              $('.styles[data-name=\"custom\"]').click();\n              $(\"#chatbox_name\").val(title);\n              $(\"#chatbox_name\").trigger(\"change\");\n            },\n            args: [customCSS, request.overlay.title],\n            world: \"MAIN\",\n          });\n          await chromeAlert(\n            request.tab.id,\n            `현재 탭에 선택한 자동저장 오버레이를 적용했습니다.\\nTwip Chatbox 설정페이지의 \"설정하기\" 버튼을 클릭해야 저장됩니다.`\n          );\n        }\n        break;\n    }\n  }\n);\n\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n  /**\n   * Twip Chatting test\n   */\n\n  if (\n    tab.url.match(\n      /^https:\\/\\/(www\\.)?twip\\.kr\\/widgets\\/chatbox\\/[0-9|a-z|A-Z]+/\n    ) &&\n    changeInfo.status === \"complete\"\n  ) {\n    /**\n     * Twip Chatbox 위젯 페이지 접속시 채팅 테스트에 필요한 함수 및 클래스, 객체 세팅을 최초 1회 실행\n     */\n    await chrome.scripting.executeScript({\n      target: {\n        tabId,\n      },\n      func: (testTwitchUserProfiles: Array<TwipUser>) => {\n        const _w = window as any;\n\n        _w.getTestMsgProfile = (msgs: Array<TestMsg>) =>\n          msgs[Math.floor(Math.random() * msgs.length)];\n        _w.getTestTwitchUserProfile = (filter?: UserTypeFilter) => {\n          const userProfiles = filter\n            ? testTwitchUserProfiles.filter((itm) => filter[itm.type])\n            : testTwitchUserProfiles;\n\n          return userProfiles[Math.floor(Math.random() * userProfiles.length)];\n        };\n\n        _w.chatControls = {};\n        class ChatTestInterval {\n          constructor(callback: () => void, tabId: string) {\n            this.callback = callback;\n            this.tabId = tabId;\n            this.set();\n          }\n\n          private callback: () => void;\n          private tabId: string;\n          private timer: NodeJS.Timeout | null = null;\n\n          private set() {\n            this.timer = setTimeout(\n              async () => {\n                await this.callback();\n                await this.set();\n              },\n              _w.chatControls[this.tabId].offsetFlag\n                ? _w.chatControls[this.tabId].intervalTime +\n                    _w.chatControls[this.tabId].offsetTime * Math.random()\n                : _w.chatControls[this.tabId].intervalTime\n            );\n          }\n\n          clear() {\n            if (this.timer) clearTimeout(this.timer);\n          }\n        }\n\n        _w.ChatTestInterval = ChatTestInterval;\n      },\n      args: [testTwitchUserProfiles],\n      world: \"MAIN\",\n    });\n  }\n\n  /**\n   * Autosave\n   */\n\n  for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n    if (\n      twipChatboxAutosaveIntervals[twipChatboxId] &&\n      twipChatboxAutosaveIntervals[twipChatboxId].tabId === tabId.toString()\n    ) {\n      await chrome.alarms.clear(\n        twipChatboxAutosaveIntervals[twipChatboxId].interval.name\n      );\n      delete twipChatboxAutosaveIntervals[twipChatboxId];\n    }\n  }\n  if (tabStatus[tabId.toString()]) tabStatus[tabId.toString()] = \"closed\";\n\n  const twipChatboxAutosaveStatus = await chrome.storage.local\n    .get(LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus)\n    .then((result) => result[LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus]);\n\n  console.log(tabId, twipChatboxAutosaveStatus);\n\n  if (twipChatboxAutosaveStatus === undefined) {\n    const tmp: { [key: string]: boolean } = {};\n    tmp[LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus] = false;\n    await chrome.storage.local.set(tmp);\n  }\n\n  if (twipChatboxAutosaveStatus && changeInfo.status === \"complete\")\n    await runTwipChatboxAutosave(tabId, tab);\n});\n\nchrome.tabs.onRemoved.addListener(async (tabId, removeInfo) => {\n  /**\n   * 탭 제거 시 해당 탭에 실행 중인 Autosave 정지\n   */\n  if (tabStatus[tabId.toString()] === \"alive\") {\n    tabStatus[tabId.toString()] = \"closed\";\n    for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n      if (\n        twipChatboxAutosaveIntervals[twipChatboxId] &&\n        twipChatboxAutosaveIntervals[twipChatboxId].tabId === tabId.toString()\n      ) {\n        await chrome.alarms.clear(\n          twipChatboxAutosaveIntervals[twipChatboxId].interval.name\n        );\n        delete twipChatboxAutosaveIntervals[twipChatboxId];\n      }\n    }\n  }\n});\n\n/**\n * Autosave Functions\n */\n\nconst createTwipChatBoxAutosaveInterval = async (\n  tabId: number,\n  twipChatboxId: string\n) => {\n  chrome.alarms.create(`twip-autosave_${tabId}_${twipChatboxId}`, {\n    periodInMinutes: (1 / 60) * 5,\n  });\n  twipChatboxAutosaveIntervals[twipChatboxId] = {\n    tabId: tabId.toString(),\n    interval: await chrome.alarms.get(\n      `twip-autosave_${tabId}_${twipChatboxId}`\n    ),\n  };\n  chrome.action.setIcon({\n    tabId,\n    path: { \"48\": \"icon/icon48-autosave.png\" },\n  });\n  chrome.action.setTitle({\n    tabId,\n    title:\n      \"Twip chatbox test tool\\n\\n현재 탭에서 Twip Chatbox 커스텀테마 소스코드 자동저장이 실행 중입니다.\",\n  });\n  await chromeAlert(\n    tabId,\n    \"현재 탭에서 Twip Chatbox 커스텀테마 소스코드 자동저장이 실행되었습니다.\"\n  );\n};\n\nconst stopTwipChatboxAutosave = async (twipChatboxId: string) => {\n  if (twipChatboxAutosaveIntervals[twipChatboxId]) {\n    const tabId = parseInt(twipChatboxAutosaveIntervals[twipChatboxId].tabId);\n    await chrome.alarms.clear(\n      twipChatboxAutosaveIntervals[twipChatboxId].interval.name\n    );\n    chrome.action.setIcon({\n      tabId,\n      path: { \"48\": \"icon/icon48.png\" },\n    });\n    await chrome.action.setTitle({\n      tabId,\n      title: \"\",\n    });\n    delete twipChatboxAutosaveIntervals[twipChatboxId];\n  }\n};\n\nconst runTwipChatboxAutosave = async (\n  tabId: number,\n  tab: chrome.tabs.Tab,\n  runOption = true\n) => {\n  if (runOption) {\n    if (isVaildTwipChatboxSettingsPage(tab.url)) {\n      tabStatus[tabId.toString()] = \"alive\";\n      const twipChatboxId = await chrome.scripting\n        .executeScript({\n          target: {\n            tabId,\n          },\n          func: () => {\n            const $ = (window as any).$;\n            const twipChatboxDemoSrc = $(\"#demo\").attr(\"src\") as string;\n            const twipChatboxId = twipChatboxDemoSrc.match(\n              /(?<=\\/widgets\\/chatbox\\/).*(?=\\?demo\\=1)/\n            );\n            return twipChatboxId[0];\n          },\n          args: [],\n          world: \"MAIN\",\n        })\n        .then((matchResult) => matchResult[0].result);\n      if (!twipChatboxAutosaveIntervals[twipChatboxId]) {\n        await createTwipChatBoxAutosaveInterval(tabId, twipChatboxId);\n      } else if (\n        twipChatboxAutosaveIntervals[twipChatboxId].tabId !== tabId.toString()\n      ) {\n        await chromeConfirm(\n          tabId,\n          \"이미 동일한 Twip Chatbox가 다른 탭에서 자동저장을 실행 중이므로 현재 탭에서 자동저장을 실행할 수 없습니다.\\n다른 탭에서 실행중인 자동저장을 종료하고 현재 탭에서 자동저장을 실행할까요?\",\n          async () => {\n            await stopTwipChatboxAutosave(twipChatboxId);\n            await createTwipChatBoxAutosaveInterval(tabId, twipChatboxId);\n          }\n        );\n      }\n    }\n  } else {\n    for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n      if (\n        twipChatboxAutosaveIntervals[twipChatboxId].tabId === tabId.toString()\n      ) {\n        await stopTwipChatboxAutosave(twipChatboxId);\n      }\n    }\n    await chromeAlert(\n      tabId,\n      \"현재 탭의 Twip Chatbox 커스텀테마 소스코드 자동저장이 종료되었습니다.\"\n    );\n  }\n};\n\n/**\n * Twip Chatting test Functions\n */\n\nconst twipChatControl = async (request: ChromeRuntimeSendMessageRequest) => {\n  if (request.runningState && request.tabId) {\n    /**\n     * run twip chatting test\n     */\n    await chrome.scripting.executeScript({\n      target: {\n        tabId: request.tabId,\n      },\n      func: (request: ChromeRuntimeSendMessageRequest) => {\n        const _w = window as any;\n        const intervalKey = `TWIP_CHATTEST_${request.tabId}`;\n        if (_w[intervalKey]) {\n          _w[intervalKey].clear();\n          delete _w[intervalKey];\n        }\n\n        _w.chatControls[request.tabId.toString()] = {\n          intervalTime: request.intervalTime,\n          offsetTime: request.randomOffset,\n          offsetFlag: request.randomFlag,\n        };\n        _w[intervalKey] = new _w.ChatTestInterval(() => {\n          console.log(\"run interval twip-chat-control\", request.tabId);\n          const testUser = _w.getTestTwitchUserProfile(\n            request.testUserTypeFilter\n          );\n          const testMsg = _w.getTestMsgProfile(request.testMsgs);\n          const userData = testUser.userData;\n\n          let rawStr = \"\";\n          let i = 0;\n          if (testMsg.emotes !== null) {\n            for (const emote in testMsg.emotes) {\n              let tmpStr = emote + \":\";\n              let j = 0;\n              for (const item of testMsg.emotes[emote]) {\n                if (j !== 0) tmpStr += \",\";\n                tmpStr += item;\n                j += 1;\n              }\n              if (i !== 0) rawStr += \"/\";\n              rawStr += tmpStr;\n              i += 1;\n            }\n            userData[\"emotes-raw\"] = rawStr;\n          }\n          userData[\"emotes\"] = testMsg.emotes;\n          _w.ChatBox.processMessage(null, userData, testMsg.msg);\n        }, request.tabId.toString());\n      },\n      args: [request],\n      world: \"MAIN\",\n    });\n  } else if (!request.runningState && request.tabId) {\n    /**\n     * stop twip chatting test\n     */\n    await chrome.scripting.executeScript({\n      target: {\n        tabId: request.tabId,\n      },\n      func: (tabId: number) => {\n        const _w = window as any;\n        const intervalKey = `TWIP_CHATTEST_${tabId}`;\n        if (_w[intervalKey]) {\n          _w[intervalKey].clear();\n          delete _w[intervalKey];\n        }\n      },\n      args: [request.tabId],\n      world: \"MAIN\",\n    });\n  }\n};\n\nconst twipChatClear = async (request: ChromeRuntimeSendMessageRequest) => {\n  await chrome.scripting.executeScript({\n    target: {\n      tabId: request.tabId,\n    },\n    func: () => {\n      (window as any).document.getElementById(\"log\").innerHTML = \"\";\n    },\n    world: \"MAIN\",\n  });\n};\n\nexport {};\n"],"names":[],"mappings":"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"}