{"version":3,"file":"background.js","sources":["../src/lib/common/chatTest.ts","../src/lib/common/constant.ts","../src/lib/background/functions.ts","../src/background.ts"],"sourcesContent":["export const testTwitchUserProfiles = [\n    {\n        type: \"normal\",\n        userData: {\n            badges: null,\n            \"badges-raw\": null,\n            color: null,\n            \"display-name\": \"testuser1\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: false,\n            \"user-id\": \"testuser1\",\n            \"user-type\": null,\n            username: \"testuser1\",\n        },\n    },\n    {\n        type: \"normal\",\n        userData: {\n            badges: null,\n            \"badges-raw\": null,\n            color: null,\n            \"display-name\": \"testuser2\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: false,\n            \"user-id\": \"testuser2\",\n            \"user-type\": null,\n            username: \"testuser2\",\n        },\n    },\n    {\n        type: \"broadcaster\",\n        userData: {\n            badges: {\n                broadcaster: \"1\",\n            },\n            \"badges-raw\": \"broadcaster/1\",\n            color: null,\n            \"display-name\": \"testbroadcaster\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: false,\n            \"user-id\": \"testbroadcaster\",\n            \"user-type\": null,\n            username: \"testbroadcaster\",\n        },\n    },\n    {\n        type: \"moderator\",\n        userData: {\n            badges: {\n                moderator: \"1\",\n            },\n            \"badges-raw\": \"moderator/1\",\n            color: null,\n            \"display-name\": \"testmoderator\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: false,\n            \"user-id\": \"testmoderator\",\n            \"user-type\": null,\n            username: \"testmoderator\",\n        },\n    },\n    {\n        type: \"partner\",\n        userData: {\n            badges: {\n                partner: \"1\",\n            },\n            \"badges-raw\": \"partner/1\",\n            color: null,\n            \"display-name\": \"testpartner\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: false,\n            \"user-id\": \"testpartner\",\n            \"user-type\": null,\n            username: \"testpartner\",\n        },\n    },\n    {\n        type: \"turbo\",\n        userData: {\n            badges: {\n                turbo: \"1\",\n            },\n            \"badges-raw\": \"turbo/1\",\n            color: null,\n            \"display-name\": \"testturbo\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: true,\n            \"user-id\": \"testturbo\",\n            \"user-type\": null,\n            username: \"testturbo\",\n        },\n    },\n    {\n        type: \"premium\",\n        userData: {\n            badges: {\n                premium: \"1\",\n            },\n            \"badges-raw\": \"premium/1\",\n            color: null,\n            \"display-name\": \"testpremium\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: true,\n            \"user-id\": \"testpremium\",\n            \"user-type\": null,\n            username: \"testpremium\",\n        },\n    },\n    {\n        type: \"bits\",\n        userData: {\n            badges: {\n                bits: \"1\",\n            },\n            \"badges-raw\": \"bits/1\",\n            color: null,\n            \"display-name\": \"testbits\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: true,\n            \"user-id\": \"testbits\",\n            \"user-type\": null,\n            username: \"testbits\",\n        },\n    },\n    {\n        type: \"admin\",\n        userData: {\n            badges: {\n                admin: \"1\",\n            },\n            \"badges-raw\": \"admin/1\",\n            color: null,\n            \"display-name\": \"testadmin\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: true,\n            \"user-id\": \"testadmin\",\n            \"user-type\": null,\n            username: \"testadmin\",\n        },\n    },\n    {\n        type: \"staff\",\n        userData: {\n            badges: {\n                staff: \"1\",\n            },\n            \"badges-raw\": \"staff/1\",\n            color: null,\n            \"display-name\": \"teststaff\",\n            emotes: null,\n            \"emotes-raw\": null,\n            \"first-msg\": false,\n            id: \"testid\",\n            \"message-type\": \"chat\",\n            mod: false,\n            \"returning-chatter\": false,\n            \"room-id\": \"testid\",\n            subscriber: false,\n            turbo: true,\n            \"user-id\": \"teststaff\",\n            \"user-type\": null,\n            username: \"teststaff\",\n        },\n    },\n];\nexport const getTestTwitchUserProfile = (filter) => {\n    const userProfiles = filter\n        ? testTwitchUserProfiles.filter((itm) => filter[itm.type])\n        : testTwitchUserProfiles;\n    return userProfiles[Math.floor(Math.random() * userProfiles.length)];\n};\nexport const testMsgEmoticons = [\n    { symbol: \"BloodTrail\", code: 69, imgSrc: \"/icon/bloodtrail.png\" },\n    { symbol: \"SmileRobot\", code: 1, imgSrc: \"/icon/smile_robot.png\" },\n    { symbol: \"PurpleHeart\", code: 555555584, imgSrc: \"/icon/purple_heart.png\" },\n    { symbol: \"HeyGuys\", code: 30259, imgSrc: \"/icon/hey_guys.png\" },\n    { symbol: \"BibleThump\", code: 86, imgSrc: \"/icon/bible_thump.png\" },\n    { symbol: \"PogChamp\", code: 305954156, imgSrc: \"/icon/pog_champ.png\" },\n    { symbol: \"PunchTrees\", code: 47, imgSrc: \"/icon/punch_trees.png\" },\n    { symbol: \"VoHiYo\", code: 81274, imgSrc: \"/icon/vohiyo.png\" },\n];\nexport const defaultTestMsgProfiles = [\n    { msg: \"Hello World\", emotes: null },\n    { msg: \"Hi There~~~!\", emotes: null },\n    { msg: \"트하트하트하트하 유하유하유하유하\", emotes: null },\n    {\n        msg: \"It's a sample chat test~ blah blah blah blah blah\",\n        emotes: null,\n    },\n    {\n        msg: \"동해물과 백두산이 마르고 닳도록 하느님이 보우하사 우리나라만세\",\n        emotes: null,\n    },\n    {\n        msg: \"남산 위에 저 소나무 철갑을 두른 듯 바람 서리 불변함은 우리 기상일세\",\n        emotes: null,\n    },\n    { msg: \"간장 공장 공장장은 강 공장장이다.\", emotes: null },\n    {\n        msg: \"트수만 믿고 있으라구 $BloodTrail $BloodTrail $BibleThump $BibleThump\",\n        emotes: {\n            69: [\"12-22\", \"24-34\"],\n            86: [\"36-46\", \"48-58\"],\n        },\n    },\n    { msg: \":귀여운돼끼_1:\", emotes: null },\n    { msg: \":귀여운돼끼_2:\", emotes: null },\n    { msg: \":귀여운돼끼_3:\", emotes: null },\n    {\n        msg: \"채팅테스트 메시지입니다! 블라블라블라블라~~\",\n        emotes: null,\n    },\n];\nexport const getTestMsgProfile = (msgs) => msgs[Math.floor(Math.random() * msgs.length)];\n","export const CHAT_TEST_TYPES = [\n    { id: 1, type: \"트윕 오버레이 테스트\", unavailable: false },\n    { id: 2, type: \"트위치 채팅 테스트\", unavailable: true },\n];\nexport const CHAT_TEST_ALERT_TEXT = {\n    NOT_TWIP_CHATBOX_OVERLAY: \"현재 탭이 트윕 챗박스 오버레이가 아닙니다.\",\n    NOT_TWITCH_CHAT_PAGE: \"현재 탭이 트위치 채팅 페이지가 아닙니다.\",\n};\nexport const AUTOSAVE_ALERT_TEXT = {\n    NOT_TWIP_CHABOX_SETTINGS_PAGE: \"현재 탭이 트윕 챗박스 설정페이지가 아닙니다.\",\n};\nexport const LOCALSTORAGE_KEYS = {\n    chatTestType: \"chatTestType\",\n    chatTestBtnState: \"chatTestBtnState\",\n    chatTestDelay: \"chatTestDelay\",\n    chatTestRandomDelayOffset: \"chatTestRandomDelayOffset\",\n    isChatTestRandomDelayOffset: \"isChatTestRandomDelayOffset\",\n    userTypeFilter: \"userTypeFilter\",\n    testMsg: \"testMsg\",\n    twipChatboxAutosaveStatus: \"twipChatboxAutosaveStatus\",\n};\n","export const chromeAlert = async (tabId, msg) => {\n    await chrome.scripting.executeScript({\n        target: {\n            tabId,\n        },\n        func: (msg) => {\n            window.alert(msg);\n        },\n        args: [msg],\n        world: \"MAIN\",\n    });\n};\nexport async function chromeConfirm(tabId, msg) {\n    return await chrome.scripting\n        .executeScript({\n        target: {\n            tabId,\n        },\n        func: (msg) => {\n            return window.confirm(msg);\n        },\n        args: [msg],\n        world: \"MAIN\",\n    })\n        .then((result) => result[0].result);\n}\nexport async function chromePrompt(tabId, msg, defaultValue = \"\") {\n    return await chrome.scripting\n        .executeScript({\n        target: {\n            tabId,\n        },\n        func: (msg, defaultValue) => {\n            return window.prompt(msg, defaultValue);\n        },\n        args: [msg, defaultValue],\n        world: \"MAIN\",\n    })\n        .then((result) => result[0].result);\n}\nexport async function getTwipOverlayData(tabId) {\n    return await chrome.scripting\n        .executeScript({\n        target: {\n            tabId,\n        },\n        func: () => {\n            const $ = window.$;\n            const date = new Date();\n            return {\n                css: $(\".CodeMirror\")[0].CodeMirror.getValue(),\n                title: $(\"#chatbox_name\").val(),\n                timestamp: `${date.toLocaleDateString()}  ${date.toLocaleTimeString()}`,\n            };\n        },\n        world: \"MAIN\",\n    })\n        .then((result) => result[0].result);\n}\nexport const getAutosavedThemeLocalStorageKey = (twipChatboxId) => `TWIP_CHATBOX_AUTOSAVE_${twipChatboxId}`;\nexport const getManualsavedThemeLocalStorage = (id) => `TWIP_CHATBOX_MANUALSAVE_${id}`;\nexport const isVaildTwipChatboxSettingsPage = (url) => url.match(/^http(s?)\\:\\/\\/twip\\.kr\\/dashboard\\/chatbox.*$/) ? true : false;\nexport function generateRandomString(num) {\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n    let result = \"\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < num; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n","import { testTwitchUserProfiles } from \"@src/lib/common/chatTest\";\nimport { LOCALSTORAGE_KEYS } from \"@lib/common/constant\";\nimport { chromeAlert, chromeConfirm, chromePrompt, generateRandomString, getAutosavedThemeLocalStorageKey, getManualsavedThemeLocalStorage, getTwipOverlayData, isVaildTwipChatboxSettingsPage, } from \"@lib/background/functions\";\nconst tabStatus = {};\nconst twipChatboxAutosaveIntervals = {};\nchrome.alarms.onAlarm.addListener(async (alarm) => {\n    const alarmType = alarm.name.split(\"_\")[0];\n    const tabId = parseInt(alarm.name.split(\"_\")[1]);\n    switch (alarmType) {\n        case \"twip-autosave\":\n            const twipChatboxId = alarm.name.split(\"_\")[2];\n            if (tabStatus[tabId.toString()] === \"closed\") {\n                await chrome.alarms.clear(alarm.name);\n                if (twipChatboxAutosaveIntervals[twipChatboxId])\n                    delete twipChatboxAutosaveIntervals[twipChatboxId];\n            }\n            else {\n                const customThemeSource = await getTwipOverlayData(tabId);\n                if (customThemeSource &&\n                    customThemeSource.css &&\n                    customThemeSource.title &&\n                    customThemeSource.timestamp) {\n                    const autosaveLocalStorageKey = getAutosavedThemeLocalStorageKey(twipChatboxId);\n                    let tmp = {};\n                    tmp[autosaveLocalStorageKey] = customThemeSource.css;\n                    await chrome.storage.local.set(tmp);\n                    tmp = {};\n                    const autosavedOverlayData = {\n                        localStorageKey: getAutosavedThemeLocalStorageKey(twipChatboxId),\n                        chatboxId: twipChatboxId,\n                        latestUpdate: customThemeSource.timestamp,\n                        title: customThemeSource.title,\n                    };\n                    await chrome.storage.local\n                        .get(\"TWIP_AUTOSAVED_OVERLAYS\")\n                        .then(async ({ TWIP_AUTOSAVED_OVERLAYS }) => {\n                        if (!TWIP_AUTOSAVED_OVERLAYS) {\n                            tmp[twipChatboxId] = autosavedOverlayData;\n                            await chrome.storage.local.set({\n                                TWIP_AUTOSAVED_OVERLAYS: tmp,\n                            });\n                        }\n                        else {\n                            tmp = TWIP_AUTOSAVED_OVERLAYS;\n                            tmp[twipChatboxId] = autosavedOverlayData;\n                            await chrome.storage.local.set({\n                                TWIP_AUTOSAVED_OVERLAYS: tmp,\n                            });\n                        }\n                    });\n                    console.log(await chrome.storage.local.get(autosaveLocalStorageKey));\n                }\n            }\n            break;\n    }\n});\nchrome.runtime.onMessage.addListener(async (request, sender, sendResponse) => {\n    switch (request.type) {\n        case \"twip-chatbox-chattest-control\":\n            if (request.tabId)\n                await twipChatControl(request);\n            break;\n        case \"twip-chatbox-chattest-clear\":\n            await twipChatClear(request);\n            break;\n        case \"twip-chatbox-autosave-enable\":\n            const tmp = {};\n            tmp[LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus] =\n                request.autosaveStatus;\n            await chrome.storage.local.set(tmp);\n            if (request.tab) {\n                let currentTabIsRunning = false;\n                for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n                    if (twipChatboxAutosaveIntervals[twipChatboxId] &&\n                        twipChatboxAutosaveIntervals[twipChatboxId].tabId ===\n                            request.tab.id.toString())\n                        currentTabIsRunning = true;\n                }\n                if (request.autosaveStatus) {\n                    if (!currentTabIsRunning &&\n                        isVaildTwipChatboxSettingsPage(request.tab.url)) {\n                        if (await chromeConfirm(request.tab.id, \"현재 탭에 Twip Chatbox 자동저장을 실행하시겠습니까?\")) {\n                            await runTwipChatboxAutosave(request.tab.id, request.tab, true);\n                        }\n                    }\n                    await chromeAlert(request.tab.id, \"(주의) 다른 탭의 Twip Chatbox 설정페이지들은 새로고침 후 자동저장이 실행됩니다.\");\n                }\n            }\n            break;\n        case \"twip-chatbox-autosave-get\":\n            let tmpTwipChatboxId = null;\n            for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n                if (twipChatboxAutosaveIntervals[twipChatboxId] &&\n                    twipChatboxAutosaveIntervals[twipChatboxId].tabId ===\n                        request.tabId.toString()) {\n                    return sendResponse({ autosaveStatus: true, twipChatboxId });\n                }\n                else if (twipChatboxAutosaveIntervals[twipChatboxId].tabId ===\n                    request.tabId.toString()) {\n                    tmpTwipChatboxId = twipChatboxId;\n                }\n            }\n            return sendResponse({\n                autosaveStatus: false,\n                twipChatboxId: tmpTwipChatboxId,\n            });\n        case \"twip-chatbox-autosave-set\":\n            await runTwipChatboxAutosave(request.tab.id, request.tab, request.autosaveStatus);\n            break;\n        case \"twip-chatbox-overlay-apply\":\n            if (isVaildTwipChatboxSettingsPage(request.tab.url)) {\n                const customCSS = await chrome.storage.local\n                    .get(request.overlay.localStorageKey)\n                    .then((res) => res[request.overlay.localStorageKey]);\n                await chrome.scripting.executeScript({\n                    target: {\n                        tabId: request.tab.id,\n                    },\n                    func: (css, title) => {\n                        const $ = window.$;\n                        $(\".CodeMirror\")[0].CodeMirror.setValue(css);\n                        $('.styles[data-name=\"custom\"]').click();\n                        $(\"#chatbox_name\").val(title);\n                        $(\"#chatbox_name\").trigger(\"change\");\n                    },\n                    args: [customCSS, request.overlay.title],\n                    world: \"MAIN\",\n                });\n                await chromeAlert(request.tab.id, `현재 탭에 선택한 자동저장 오버레이를 적용했습니다.\\nTwip Chatbox 설정페이지의 \"설정하기\" 버튼을 클릭해야 저장됩니다.`);\n            }\n            break;\n        case \"twip-chatbox-overlay-save\":\n            if (isVaildTwipChatboxSettingsPage(request.tab.url)) {\n                const customThemeSource = await getTwipOverlayData(request.tab.id);\n                if (customThemeSource &&\n                    customThemeSource.css &&\n                    customThemeSource.title &&\n                    customThemeSource.timestamp) {\n                    const overlayCustomThemeTitle = await chromePrompt(request.tab.id, \"저장할 오버레이 커스텀 테마의 이름을 입력하세요.\", customThemeSource.title);\n                    const themeId = generateRandomString(10);\n                    const manualSavedLocalStorageKey = getManualsavedThemeLocalStorage(themeId);\n                    let tmp = {};\n                    tmp[manualSavedLocalStorageKey] = customThemeSource.css;\n                    await chrome.storage.local.set(tmp);\n                    tmp = {};\n                    const manualSavedOverlayData = {\n                        localStorageKey: manualSavedLocalStorageKey,\n                        chatboxId: themeId,\n                        latestUpdate: customThemeSource.timestamp,\n                        title: overlayCustomThemeTitle,\n                    };\n                    await chrome.storage.local\n                        .get(\"TWIP_MANUALSAVED_OVERLAYS\")\n                        .then(async ({ TWIP_MANUALSAVED_OVERLAYS }) => {\n                        if (!TWIP_MANUALSAVED_OVERLAYS) {\n                            tmp[themeId] = manualSavedOverlayData;\n                            await chrome.storage.local.set({\n                                TWIP_MANUALSAVED_OVERLAYS: tmp,\n                            });\n                        }\n                        else {\n                            tmp = TWIP_MANUALSAVED_OVERLAYS;\n                            tmp[themeId] = manualSavedOverlayData;\n                            await chrome.storage.local.set({\n                                TWIP_MANUALSAVED_OVERLAYS: tmp,\n                            });\n                        }\n                    });\n                    await chromeAlert(request.tab.id, `커스텀 테마 \"${overlayCustomThemeTitle}\"가 저장되었습니다.`);\n                    sendResponse({});\n                    break;\n                }\n            }\n        case \"twip-chatbox-overlay-rename\":\n            await chrome.storage.local\n                .get(\"TWIP_MANUALSAVED_OVERLAYS\")\n                .then(async ({ TWIP_MANUALSAVED_OVERLAYS }) => {\n                if (TWIP_MANUALSAVED_OVERLAYS &&\n                    TWIP_MANUALSAVED_OVERLAYS[request.overlay.chatboxId]) {\n                    let tmp = TWIP_MANUALSAVED_OVERLAYS;\n                    tmp[request.overlay.chatboxId].title = request.overlay.title;\n                    await chrome.storage.local.set({\n                        TWIP_MANUALSAVED_OVERLAYS: tmp,\n                    });\n                }\n            });\n            sendResponse({});\n            break;\n        case \"twip-chatbox-overlay-remove\":\n            if (await chromeConfirm(request.tab.id, \"정말 오버레이를 삭제하시겠습니까?\\n삭제된 오버레이는 복구할 수 없습니다.\")) {\n                await chrome.storage.local\n                    .get(\"TWIP_MANUALSAVED_OVERLAYS\")\n                    .then(async ({ TWIP_MANUALSAVED_OVERLAYS }) => {\n                    if (TWIP_MANUALSAVED_OVERLAYS &&\n                        TWIP_MANUALSAVED_OVERLAYS[request.overlay.chatboxId]) {\n                        delete TWIP_MANUALSAVED_OVERLAYS[request.overlay.chatboxId];\n                        await chrome.storage.local.set({\n                            TWIP_MANUALSAVED_OVERLAYS,\n                        });\n                    }\n                })\n                    .then(async () => {\n                    await chromeAlert(request.tab.id, \"오버레이를 삭제했습니다.\");\n                })\n                    .then(() => {\n                    sendResponse({});\n                });\n            }\n            else {\n                sendResponse({});\n            }\n            break;\n    }\n});\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n    /**\n     * Twip Chatting test\n     */\n    if (tab.url.match(/^https:\\/\\/(www\\.)?twip\\.kr\\/widgets\\/chatbox\\/[0-9|a-z|A-Z]+/) &&\n        changeInfo.status === \"complete\") {\n        /**\n         * Twip Chatbox 위젯 페이지 접속시 채팅 테스트에 필요한 함수 및 클래스, 객체 세팅을 최초 1회 실행\n         */\n        await chrome.scripting.executeScript({\n            target: {\n                tabId,\n            },\n            func: (testTwitchUserProfiles) => {\n                const _w = window;\n                _w.getTestMsgProfile = (msgs) => msgs[Math.floor(Math.random() * msgs.length)];\n                _w.getTestTwitchUserProfile = (filter) => {\n                    const userProfiles = filter\n                        ? testTwitchUserProfiles.filter((itm) => filter[itm.type])\n                        : testTwitchUserProfiles;\n                    return userProfiles[Math.floor(Math.random() * userProfiles.length)];\n                };\n                _w.chatControls = {};\n                class ChatTestInterval {\n                    constructor(callback, tabId) {\n                        this.timer = null;\n                        this.callback = callback;\n                        this.tabId = tabId;\n                        this.set();\n                    }\n                    set() {\n                        this.timer = setTimeout(async () => {\n                            await this.callback();\n                            await this.set();\n                        }, _w.chatControls[this.tabId].offsetFlag\n                            ? _w.chatControls[this.tabId].intervalTime +\n                                _w.chatControls[this.tabId].offsetTime * Math.random()\n                            : _w.chatControls[this.tabId].intervalTime);\n                    }\n                    clear() {\n                        if (this.timer)\n                            clearTimeout(this.timer);\n                    }\n                }\n                _w.ChatTestInterval = ChatTestInterval;\n            },\n            args: [testTwitchUserProfiles],\n            world: \"MAIN\",\n        });\n    }\n    /**\n     * Autosave\n     */\n    for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n        if (twipChatboxAutosaveIntervals[twipChatboxId] &&\n            twipChatboxAutosaveIntervals[twipChatboxId].tabId === tabId.toString()) {\n            await chrome.alarms.clear(twipChatboxAutosaveIntervals[twipChatboxId].interval.name);\n            delete twipChatboxAutosaveIntervals[twipChatboxId];\n        }\n    }\n    if (tabStatus[tabId.toString()])\n        tabStatus[tabId.toString()] = \"closed\";\n    const twipChatboxAutosaveStatus = await chrome.storage.local\n        .get(LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus)\n        .then((result) => result[LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus]);\n    console.log(tabId, twipChatboxAutosaveStatus);\n    if (twipChatboxAutosaveStatus === undefined) {\n        const tmp = {};\n        tmp[LOCALSTORAGE_KEYS.twipChatboxAutosaveStatus] = false;\n        await chrome.storage.local.set(tmp);\n    }\n    if (twipChatboxAutosaveStatus && changeInfo.status === \"complete\")\n        await runTwipChatboxAutosave(tabId, tab);\n});\nchrome.tabs.onRemoved.addListener(async (tabId, removeInfo) => {\n    /**\n     * 탭 제거 시 해당 탭에 실행 중인 Autosave 정지\n     */\n    if (tabStatus[tabId.toString()] === \"alive\") {\n        tabStatus[tabId.toString()] = \"closed\";\n        for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n            if (twipChatboxAutosaveIntervals[twipChatboxId] &&\n                twipChatboxAutosaveIntervals[twipChatboxId].tabId === tabId.toString()) {\n                await chrome.alarms.clear(twipChatboxAutosaveIntervals[twipChatboxId].interval.name);\n                delete twipChatboxAutosaveIntervals[twipChatboxId];\n            }\n        }\n    }\n});\n/**\n * Autosave Functions\n */\nconst createTwipChatBoxAutosaveInterval = async (tabId, twipChatboxId) => {\n    chrome.alarms.create(`twip-autosave_${tabId}_${twipChatboxId}`, {\n        periodInMinutes: (1 / 60) * 5,\n    });\n    twipChatboxAutosaveIntervals[twipChatboxId] = {\n        tabId: tabId.toString(),\n        interval: await chrome.alarms.get(`twip-autosave_${tabId}_${twipChatboxId}`),\n    };\n    chrome.action.setIcon({\n        tabId,\n        path: { \"48\": \"icon/icon48-autosave.png\" },\n    });\n    chrome.action.setTitle({\n        tabId,\n        title: \"Twip chatbox test tool\\n\\n현재 탭에서 Twip Chatbox 커스텀테마 소스코드 자동저장이 실행 중입니다.\",\n    });\n    await chromeAlert(tabId, \"현재 탭에서 Twip Chatbox 커스텀테마 소스코드 자동저장이 실행되었습니다.\");\n};\nconst stopTwipChatboxAutosave = async (twipChatboxId) => {\n    if (twipChatboxAutosaveIntervals[twipChatboxId]) {\n        const tabId = parseInt(twipChatboxAutosaveIntervals[twipChatboxId].tabId);\n        await chrome.alarms.clear(twipChatboxAutosaveIntervals[twipChatboxId].interval.name);\n        chrome.action.setIcon({\n            tabId,\n            path: { \"48\": \"icon/icon48.png\" },\n        });\n        await chrome.action.setTitle({\n            tabId,\n            title: \"\",\n        });\n        delete twipChatboxAutosaveIntervals[twipChatboxId];\n    }\n};\nconst runTwipChatboxAutosave = async (tabId, tab, runOption = true) => {\n    if (runOption) {\n        if (isVaildTwipChatboxSettingsPage(tab.url)) {\n            tabStatus[tabId.toString()] = \"alive\";\n            const twipChatboxId = await chrome.scripting\n                .executeScript({\n                target: {\n                    tabId,\n                },\n                func: () => {\n                    const $ = window.$;\n                    const twipChatboxDemoSrc = $(\"#demo\").attr(\"src\");\n                    const twipChatboxId = twipChatboxDemoSrc.match(/(?<=\\/widgets\\/chatbox\\/).*(?=\\?demo\\=1)/);\n                    return twipChatboxId[0];\n                },\n                args: [],\n                world: \"MAIN\",\n            })\n                .then((matchResult) => matchResult[0].result);\n            if (!twipChatboxAutosaveIntervals[twipChatboxId]) {\n                await createTwipChatBoxAutosaveInterval(tabId, twipChatboxId);\n            }\n            else if (twipChatboxAutosaveIntervals[twipChatboxId].tabId !== tabId.toString()) {\n                if (await chromeConfirm(tabId, \"이미 동일한 Twip Chatbox가 다른 탭에서 자동저장을 실행 중이므로 현재 탭에서 자동저장을 실행할 수 없습니다.\\n다른 탭에서 실행중인 자동저장을 종료하고 현재 탭에서 자동저장을 실행할까요?\")) {\n                    await stopTwipChatboxAutosave(twipChatboxId);\n                    await createTwipChatBoxAutosaveInterval(tabId, twipChatboxId);\n                }\n            }\n        }\n    }\n    else {\n        for (const twipChatboxId of Object.keys(twipChatboxAutosaveIntervals)) {\n            if (twipChatboxAutosaveIntervals[twipChatboxId].tabId === tabId.toString()) {\n                await stopTwipChatboxAutosave(twipChatboxId);\n            }\n        }\n        await chromeAlert(tabId, \"현재 탭의 Twip Chatbox 커스텀테마 소스코드 자동저장이 종료되었습니다.\");\n    }\n};\n/**\n * Twip Chatting test Functions\n */\nconst twipChatControl = async (request) => {\n    if (request.runningState && request.tabId) {\n        /**\n         * run twip chatting test\n         */\n        await chrome.scripting.executeScript({\n            target: {\n                tabId: request.tabId,\n            },\n            func: (request) => {\n                const _w = window;\n                const intervalKey = `TWIP_CHATTEST_${request.tabId}`;\n                if (_w[intervalKey]) {\n                    _w[intervalKey].clear();\n                    delete _w[intervalKey];\n                }\n                _w.chatControls[request.tabId.toString()] = {\n                    intervalTime: request.intervalTime,\n                    offsetTime: request.randomOffset,\n                    offsetFlag: request.randomFlag,\n                };\n                _w[intervalKey] = new _w.ChatTestInterval(() => {\n                    console.log(\"run interval twip-chat-control\", request.tabId);\n                    const testUser = _w.getTestTwitchUserProfile(request.testUserTypeFilter);\n                    const testMsg = _w.getTestMsgProfile(request.testMsgs);\n                    const userData = testUser.userData;\n                    let rawStr = \"\";\n                    let i = 0;\n                    if (testMsg.emotes !== null) {\n                        for (const emote in testMsg.emotes) {\n                            let tmpStr = emote + \":\";\n                            let j = 0;\n                            for (const item of testMsg.emotes[emote]) {\n                                if (j !== 0)\n                                    tmpStr += \",\";\n                                tmpStr += item;\n                                j += 1;\n                            }\n                            if (i !== 0)\n                                rawStr += \"/\";\n                            rawStr += tmpStr;\n                            i += 1;\n                        }\n                        userData[\"emotes-raw\"] = rawStr;\n                    }\n                    userData[\"emotes\"] = testMsg.emotes;\n                    _w.ChatBox.processMessage(null, userData, testMsg.msg);\n                }, request.tabId.toString());\n            },\n            args: [request],\n            world: \"MAIN\",\n        });\n    }\n    else if (!request.runningState && request.tabId) {\n        /**\n         * stop twip chatting test\n         */\n        await chrome.scripting.executeScript({\n            target: {\n                tabId: request.tabId,\n            },\n            func: (tabId) => {\n                const _w = window;\n                const intervalKey = `TWIP_CHATTEST_${tabId}`;\n                if (_w[intervalKey]) {\n                    _w[intervalKey].clear();\n                    delete _w[intervalKey];\n                }\n            },\n            args: [request.tabId],\n            world: \"MAIN\",\n        });\n    }\n};\nconst twipChatClear = async (request) => {\n    await chrome.scripting.executeScript({\n        target: {\n            tabId: request.tabId,\n        },\n        func: () => {\n            window.document.getElementById(\"log\").innerHTML = \"\";\n        },\n        world: \"MAIN\",\n    });\n};\n"],"names":[],"mappings":"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"}